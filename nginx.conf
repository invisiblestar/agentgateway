user www-data;
worker_processes auto;
pid /run/nginx.pid;
include /etc/nginx/modules-enabled/*.conf;

events {
    worker_connections 1024;
}

http {
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;

    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;

    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    gzip on;
    gzip_disable "msie6";

    # Ограничение размера запроса для защиты от DoS-атак
    client_max_body_size 10m;

    # Ограничение скорости запросов (защита от DDoS)
    limit_req_zone $binary_remote_addr zone=api_limit:10m rate=10r/s;

    # Блокировка подозрительных запросов
    map $http_user_agent $bad_bot {
        default 0;
        ~*(bot|crawl|spider) 1;
        "" 1;
    }

    # Блокировка подозрительных запросов с SQL-инъекциями
    map $request_uri $sql_injection {
        default 0;
        ~*(%27|\'|%3D|=|%2F|\*|/\*|or%201=1|union%20select|concat|group_by) 1;
    }

    # Блокировка подозрительных запросов с XSS-атаками
    map $request_uri $xss_attack {
        default 0;
        ~*(<|>|script|alert|onerror|onload|eval|javascript:) 1;
    }

    server {
        listen 80;
        server_name localhost;

        # Заголовки безопасности
        add_header X-Content-Type-Options nosniff;
        add_header X-Frame-Options SAMEORIGIN;
        add_header X-XSS-Protection "1; mode=block";
        add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'; img-src 'self' data:;";

        # Frontend
        location / {
            # Проксирование запросов к фронтенду
            proxy_pass http://localhost:3000;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;

            # Добавляем явное разрешение на доступ
            allow all;
        }

        # Backend API с проверкой безопасности
        location /api {
            # Проверка безопасности
            if ($bad_bot = 1) {
                return 403;
            }

            if ($sql_injection = 1) {
                return 403;
            }

            if ($xss_attack = 1) {
                return 403;
            }

            # Ограничение скорости запросов
            limit_req zone=api_limit burst=20 nodelay;

            # Проксирование запросов к бэкенду
            proxy_pass http://localhost:8000;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Добавляем явное разрешение на доступ
            allow all;
        }

        # Специальный путь /query с проверкой безопасности
        location /query {
            # Проверка безопасности
            if ($bad_bot = 1) {
                return 403;
            }

            if ($sql_injection = 1) {
                return 403;
            }

            if ($xss_attack = 1) {
                return 403;
            }

            # Проверка заголовка Origin для защиты от CSRF
            if ($http_origin !~ "^(https?://localhost(:[0-9]+)?|https?://127\.0\.0\.1(:[0-9]+)?)$") {
                return 403;
            }

            # Ограничение скорости запросов
            limit_req zone=api_limit burst=20 nodelay;

            # Проксирование запросов к бэкенду
            proxy_pass http://localhost:8000/query;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Security-Check "passed";

            # Добавляем явное разрешение на доступ
            allow all;
        }

        # Static files
        location /static {
            # Используем более гибкий путь с правами доступа
            root /var/www;

            # Добавляем обработку индексных файлов
            index index.html index.htm;

            # Добавляем try_files для корректной обработки запросов
            try_files $uri $uri/ =404;

            # Устанавливаем кеширование
            expires 30d;

            # Добавляем явное разрешение на доступ
            allow all;
        }
    }
}
